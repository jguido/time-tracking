<?php

namespace dElt4\TimeBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\DBAL\Types\Type;
use Sonata\UserBundle\Model\User;

/**
 * EventRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventRepository extends EntityRepository
{
    /**
     * Return events that matches to $begin && $end
     * $end date should be exclude
     *
     * @param \DateTime $day
     * @param User      $user
     */
    public function getEvents(\DateTime $day, User $user)
    {

        $qb = $this->createQueryBuilder('e');


        return $qb
            ->where('YEAR(e.day) = :year')
            ->andWhere('MONTH(e.day) = :month')
            ->andWhere(
                $qb->expr()->eq('e.user', $user->getId())
            )
            ->setParameter('year', $day->format('Y'))
            ->setParameter('month', $day->format('m'))
            ->orderBy('e.day')
            ->getQuery()
            ->getResult();
    }

    /**
     * @param array  $data
     * @param User   $user
     * @param string $type
     * @return Event
     */
    public function findOrCreate(array $data, User $user, $type)
    {
        if (isset($data['id']) && '' !== $data['id']) {
            $event = $this->find($data['id']);
        } else {
            $event = new Event();
            $event
                ->setDay(\DateTime::createFromFormat('Y-m-d', $data['date']))
                ->setType($type);
            $this->_em->persist($event);
        }
        $project = $this->_em->getRepository('dElt4TimeBundle:Project')->find($data['project']);

        $event
            ->setProject($project)
            ->setUser($user);

        $this->_em->flush($event);

        return $event;
    }
}
